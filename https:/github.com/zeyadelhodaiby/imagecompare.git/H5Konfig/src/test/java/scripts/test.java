package scripts;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.remote.MobileBrowserType;
import io.appium.java_client.remote.MobileCapabilityType;

import static org.junit.Assert.*;
import static org.testng.Assert.assertEquals;
import java.io.File;  
import java.io.IOException;  
import org.apache.commons.io.FileUtils;  
import org.openqa.selenium.By;  
import org.openqa.selenium.OutputType;  
import org.openqa.selenium.TakesScreenshot;  
import org.openqa.selenium.WebDriver;  
import org.openqa.selenium.firefox.FirefoxDriver;  
import org.testng.annotations.BeforeTest;  
import org.testng.annotations.Test;

import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.DataBuffer;
import java.awt.image.PixelGrabber;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Random;

import javax.imageio.ImageIO;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'zeyadelhodaiby' at '3/12/18 5:11 PM' with Gradle 2.14.1
 *
 * @author zeyadelhodaiby, @date 3/12/18 5:11 PM
 */

	
	public class test {
		public static WebDriver driver;

		public void setUp() throws Exception
		{
			
			File img1 = new File("/Users/zeyadelhodaiby/Desktop/bmwpics/thecar.png");
			File img2 = new File("/Users/zeyadelhodaiby/Desktop/bmwpics/therim.png");

			// System.setProperty("webdriver.chrome.driver","/Users/zeyadelhodaiby/Downloads/chromedriverz");
				driver=new FirefoxDriver();
				String url = "https://h5vco-bmw-test.bmwgroup.com/BMW_DEV/app/start.html";
//String URL2 = "https://www.m6.bmw-int1.com/en/home.html";
				 // driver.get("http:\\google.com");
			      //  driver.manage().window().maximize();

			//	driver.get("https://www.h5vco-bmw-test.bmwgroup.com/BMW_DEV/app/start.html");

				driver.get("https://www.bmw.de/de/ssl/configurator.html#/");
//float x = compareImage(img1,img2);
//processImage();		
Thread.sleep(2000);		
}
	
		public File TakenSS() throws Exception
		{	

Random rand = new Random();

int  n = rand.nextInt(50) + 1;
		     System.out.println(driver.getTitle());
			   File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
			   
			   File x = new File("/Users/zeyadelhodaiby/Desktop/bmwpics/test"+n+".png");
			    FileUtils.copyFile(scrFile, x);
			    
			    return x;
		}
	public void CON6911() throws Exception
	{	
			
			CompareImage CI = new CompareImage();

Thread.sleep(5000);
Click("/html/body/div[2]/div[1]/div[1]/div/div/div[2]/ul/li/a"); //click on weiter
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/div[2]/data-ng-include[1]/div[2]/ui-view/section/section[1]/div/div/section[1]/a[1]/div[2]/div/img");


Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[3]/a/div/div/div[2]");
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[4]/a/div/div/div[2]");
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[6]/a/div/div/div");


// choose rim
//Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/bm-feature-selection-navigation/div/div/div[1]/nav/ul/li[8]/a/div/div/div[1]/img");
//choose a rim that doesnot change car colot.
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/bm-feature-selection-navigation/div/div/div[1]/nav/ul/li[2]/a/div/div/div[1]/img");

//skip conclift
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/div[1]/nav/div[2]/div/div[2]/ng-include/div/div/div[3]/div[2]/button[1]");
Thread.sleep(4000);

Thread.sleep(5000);
//TakenSS();
//File img1 = new File("refrences/16Leichtmetallr√§derSternspeiche376.png");
File img1 = new File("refrences/test28.png");

Boolean ss = CompareImage.CompareImages(img1, TakenSS());
System.out.println(ss);
//click on interieur
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[8]/a/div/div/div[2]");
Thread.sleep(4000);
//click interiur subcategory ( poister )
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/bm-feature-selection-navigation/div/div/div[1]/nav[1]/ul/li[2]/a/div/div/div[1]/img");

//skip conflict
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/div[1]/nav/div[2]/div/div[2]/ng-include/div/div/div[3]/div[2]/button[1]");


//click leasing
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[13]/a/div/div/div[2]");
//choose leasing option
//driver.findElement(By.id("A-3.684")).click();
//Click finale
Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[14]/a/div/div/div[2]");

//Click("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[11]/a/div/div/div[2]");


//lick("/html/body/div[2]/div[2]/div/div/div/div[2]/div[2]/section[1]/data-ng-include/div/nav/div/div/section/nav/ul/li[12]/a/div");

//driver.findElement(By.xpath(("//*[@id='ds2-globalnav']/ul[1]"))).click();



	}

	    
public void Click(String Xpath) throws Exception
	{
	Thread.sleep(5000);
		 WebElement element = (new WebDriverWait(driver, 10))
				   .until(ExpectedConditions.elementToBeClickable((By.xpath(Xpath))));
		 element.click();
		
	}
	    

public float compareImage(File fileA, File fileB) {

    float percentage = 0;
    try {
        // take buffer data from both image files //
        BufferedImage biA = ImageIO.read(fileA);
        DataBuffer dbA = biA.getData().getDataBuffer();
        int sizeA = dbA.getSize();
        BufferedImage biB = ImageIO.read(fileB);
        DataBuffer dbB = biB.getData().getDataBuffer();
        int sizeB = dbB.getSize();
        int count = 0;
        // compare data-buffer objects //
        if (sizeA == sizeB) {

            for (int i = 0; i < sizeA; i++) {

                if (dbA.getElem(i) == dbB.getElem(i)) {
                    count = count + 1;
                }

            }
            percentage = (count * 100) / sizeA;
        } else {
            System.out.println("Both the images are not of same size");
        }

    } catch (Exception e) {
        System.out.println("Failed to compare image files ...");
    }
    return percentage;
}


static void processImage()
{
    String file1 = "/Users/zeyadelhodaiby/Desktop/bmwpics/thecar.png";
    String file2 = "/Users/zeyadelhodaiby/Desktop/bmwpics/therim.png";

    Image image1 = Toolkit.getDefaultToolkit().getImage(file1);
    Image image2 = Toolkit.getDefaultToolkit().getImage(file2);

    try 
    {    
        PixelGrabber grab1 = new PixelGrabber(image1, 0, 0, -1, -1, false);
        PixelGrabber grab2 = new PixelGrabber(image2, 0, 0, -1, -1, false);

        int[] data1 = null;

        if (grab1.grabPixels()) 
        {
            int width = grab1.getWidth();
            int height = grab1.getHeight();
            data1 = new int[width * height];
            data1 = (int[]) grab1.getPixels();
        }

        int[] data2 = null;

        if (grab2.grabPixels()) {
            int width = grab2.getWidth();
            int height = grab2.getHeight();
            data2 = new int[width * height];
            data2 = (int[]) grab2.getPixels();
        }

        System.out.println("Pixels equal: " + java.util.Arrays.equals(data1, data2));

    } catch (InterruptedException e1) {
        e1.printStackTrace();
    }
}


	
    }
